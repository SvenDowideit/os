#!/bin/bash

set -e
set -x

# TODO: add a "version" flag - so I can build v0.8.0.
# TODO: work out how to specify all the other repo remotes that are useful.

#TODO: add a --rebuild flag
# this flag is set to 1 if any stage has been deleted to ensure the later stages are rebuilt
REBUILD=0

# TODO: make a clean-all, and a artifact-exists target (ie, create our own make :())

# TODO: extract into a checkout-rancheros

cd ..

BUILDDIR=$(pwd)

for repo in os-kernel os-base os-images os-services os-packer; do
  if [ ! -d "$repo" ]; then
    git clone https://github.com/rancher/$repo
  fi
  #git fetch --all
  #TODO: alert if we're not a the head of whatever branch we're on
done

# TODO: this can happen in paralell with os-kernel
# TODO: and so should not rebuild whenever the kernel changes.
cd os-base
if [ "$REBUILD" == "1" ] || [ ! -e "dist/artifacts/os-base_amd64.tar.xz" ]; then
  REBUILD=1
  make .dapper
  make ci
fi
cd ..


# this is the "build" suite
# test if artifact already exists and is current, then skip.


cd os-kernel
# if there is no source, clone it and check out what we're releasing.
./scripts/clone
cd ../linux
LINUX_KERNEL_VERSION=$(make kernelversion)
echo "Linux kernel version: ${LINUX_KERNEL_VERSION}"
cd ../os-kernel
#TODO: hardcoded linux source dir bad.
#TODO: build for arm, arm64 etc
#TODO: optionally skip this
if [ "$REBUILD" == "1" ] || [ ! -e "../linux/linux-${LINUX_KERNEL_VERSION}-rancher-x86.tar" ]; then
  # TODO: there is an assumption in the os-kernel build tools that there is only one linux*.tar file :()
  REBUILD=1
  #TODO: optionally skip this to use the kernel already built
  #from os-kernel/scripts/extract
  #cp cp ${CONFIG}/kernel-config ${DIR}/.config
  cp config/kernel-config ../linux/.config
  ./scripts/build-kernel --srcdir ${BUILDDIR}/linux
fi
if [ "$REBUILD" == "1" ] || [ ! -e "dist/kernel/build.tar.gz" ]; then
  REBUILD=1
  ./scripts/package-kernel --srcdir ${BUILDDIR}/linux
fi
cd ..

cd os-images
  if [ "$REBUILD" == "1" ] || [ ! -e "dist/images" ]; then
    REBUILD=1
    make
  fi
cd ..

#TODO: need to bundle the os-images and modified services files into the iso

cd os
  if [ "$REBUILD" == "1" ] || [ ! -e "dist/artifacts/rancheros.iso" ]; then
    REBUILD=1
    mkdir -p assets/downloads/
    cd assets/downloads/
    cp ../../../os-kernel/dist/kernel/linux-${LINUX_KERNEL_VERSION}-rancher-x86.tar.gz kernel.tar.gz
    tar xvJf ../../../os-base/dist/artifacts/os-base_amd64.tar.xz
    # TODO selinux profile?
    ls -la
    cd ../..
    # Add the images we built in os-images
    cp ../os-images/dist/images assets/os-images.list
    make dev
  fi
  ls -lah dist/artifacts/rancheros.iso
cd ..

