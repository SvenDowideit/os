hostname: test-cloud
ssh_authorized_keys:
  - ssh-rsa AAAAB4NzaC1yc2EAAAADAQABAAABAQDptcSecYUcBExglXGkl9NiRkTTcIxQ4AVnMYcfW560YGVUx6+QgDnj5DScrayi/FtiByleyDCkfoW8vk/iGvyNkFrjQ/WnGXnVQrEkPQyi7gvB/NAvJlZYFTmLsLcr/sc3ZN0SE+bubvE7pGIDBd+wI/u9q2ok/r5GhjbctHR8t8V0XRCzIxEOSwrYJ3O8xxYFP8UPvyitIz85+FKDpoljS/77sXH3lcoMtrzhgw4rWaE8FQb5caI08Nn15ibqrYoK30Gq2y2aPCbQmlhx0Z7z9FNkACXx0m54A0jurRsiOnyxVb2oSR5CU8cNawBKmJwl8Ygd5JdKpaoQnqeRw9mJ sven@Svens-Mac-mini.local
  - ssh-dss AAAAB3NzaC1kc3MAAACBAOx1jTO0moMoc+AkryZIebnEBRgmgRFA2iQyxaJB55VT5lHIVfH2O7f2roQoq3bTXEirGOe87oY4LIwxpGMRAl1REzD4HVBcjiY7Oj+lQYCJSjjwxlzEtP1gRqCCybYylwP795d+WEiMJzHl8pA1hVDgO09eVxhhVTZOum4klUP9AAAAFQDPcWw8X1YiSBk48xhllOY0XETJVwAAAIEAmF1sUH8JQFRTTR840MMJg7IVctD7iVAx9TOu9/HgSro6xx2yc9KqoI+CwnkdgDTeAyF9McsB4uFvlLSBMFcn2gEy4uyAZsLJ1U11r7//65VSbSuCGPBozEdf4EkmOuQIhSW3nzMvIHHDsC04CAMTIAtgvp4FZKXKgjPfNvkaIvQAAACAKhD986nhP1BxgkA9x50Hs7e4aPTw/WxrsjG45i9AAxWAT80yyzALLP5ETQHxEdd9rxG17bTH7h/7lhNfDJUMC8ok8RKgRTNzSoOUoNNNGToM/3kgWpvCWnK8EenZijTXOMjs7EMk46P+Wy3j4LqHj6GYkrckpEMxscs1O/eXV2k= sven@quad
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC4lT2u93xi+ghKV/zmkSDLqDzGOVb0iZnmh3H6+jJuAiEJwrQ7a33nL9CYVhvlE+dvszVqJT5Q2VHexiuzguqCeaoQvn9preuIc0vvSVlxUwBRtNjKGPO5SmcDgiPKLqeLNgkKWBWaseZR/GdrXlnUD8snnatBtSh2mx1cwVJr0XdyTAtnCS5eyONzpBFpHZ7/dzzeSqjG3SAXwj/x41WDJE4bBNXlGOCJ1RYk9Z5HYH/fGt5B6V34hy/EKe9Wl4yaDdlL+JTXHWGTEhPL/+yaUM6SZT92XFq/H562t8EIAL15KX8FtOv4Q/U9ByZP8xcSir/VIKoGIfMdeRtZobSDvM0caEMUp6lI+5ErmynVExVtroSPdjVdX3q7Onuqcp6JvBFVngAcviuCZDCXuFfF9ikB1axBTGTQlCAebCBPapyBF8z6RFDROHmm5CeV3RozsHEaRqNzPBoG5Tz9Z3mmDE/i2ihLpET67dpQVI8H3/r4puNwtttHh93BmPR9ZB80iLf4Oim/y1joI7UQwc+TJg6eMBZMUWeR8dVhIXFgohiEfvuSUfs7j67V9IzzIefaRGKEv1bBnTYaOlD/KbPXOxYazZAm00wx6DvEfiKxwCOanbN0z+TMyi5WxCum7pSCUZ9+M767aPzRBipQokpBJTLuq5Tn+XAOU49AIt0a3Q== SvenDowideit@home.org.au
rancher:
  shutdown_timeout: 60
  services_include:
    open-vm-tools: true
  password: rancher
  environment:
    VERSION: {{.VERSION}}
    SUFFIX: {{.SUFFIX}}
  defaults:
    hostname: {{.HOSTNAME_DEFAULT}}
    {{if eq "amd64" .ARCH -}}
    docker:
      engine: docker-1.12.6
    {{else -}}
    docker:
      engine: docker-1.11.2
    {{end -}}
    network:
      dns:
        nameservers: [8.8.8.8, 8.8.4.4]
  bootstrap:
    bootstrap:
      image: {{.OS_REPO}}/os-bootstrap:{{.VERSION}}{{.SUFFIX}}
      command: ros bootstrap
      labels:
        io.rancher.os.detach: "false"
        io.rancher.os.scope: system
      log_driver: json-file
      net: none
      privileged: true
      volumes:
      - /dev:/host/dev
      - /lib/modules:/lib/modules
      - /lib/firmware:/lib/firmware
      - /usr/bin/ros:/usr/bin/ros:ro
      - /usr/share/ros:/usr/share/ros:ro
      - /var/lib/rancher:/var/lib/rancher:ro
  cloud_init_services:
    cloud-init:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: cloud-init-save
      labels:
        io.rancher.os.detach: "false"
        io.rancher.os.scope: system
      log_driver: json-file
      net: host
      uts: host
      pid: host
      ipc: host
      privileged: true
      volumes:
      - /dev:/host/dev
      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt.rancher
      - /lib/modules:/lib/modules
      - /lib/firmware:/lib/firmware
      - /usr/bin/ros:/usr/bin/ros:ro
      - /usr/bin/ros:/usr/bin/cloud-init-save
      - /usr/share/ros:/usr/share/ros:ro
      - /var/lib/rancher:/var/lib/rancher
      - /var/lib/rancher/conf:/var/lib/rancher/conf
  bootstrap_docker:
    registry_mirror: "http://10.10.10.23:5555"
    insecure_registry:
    - 10.10.10.23:5000
    - arian:5000
    bridge: none
    storage_driver: overlay
    restart: false
    graph: /var/lib/system-docker
    group: root
    host: ["unix:///var/run/system-docker.sock"]
    userland_proxy: false
  console: default
  cloud_init:
    datasources:
    - configdrive:/media/config-2
  repositories:
    core:
      url: {{.OS_SERVICES_REPO}}/{{.REPO_VERSION}}
  state:
    fstype: auto
    oem_fstype: auto
    oem_dev: LABEL=RANCHER_OEM
  sysctl:
    fs.file-max: 1000000000
  services:
    {{if eq "amd64" .ARCH -}}
    acpid:
      image: {{.OS_REPO}}/os-acpid:{{.VERSION}}{{.SUFFIX}}
      command: /usr/sbin/acpid -f
      labels:
        io.rancher.os.scope: system
      net: host
      uts: host
      privileged: true
      volumes_from:
      - command-volumes
      - system-volumes
    {{end -}}
    all-volumes:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: echo
      labels:
        io.rancher.os.createonly: "true"
        io.rancher.os.scope: system
      log_driver: json-file
      net: none
      privileged: true
      read_only: true
      volumes_from:
      - container-data-volumes
      - command-volumes
      - media-volumes
      - user-volumes
      - system-volumes
    cloud-init-execute:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: cloud-init-execute -pre-console
      labels:
        io.rancher.os.detach: "false"
        io.rancher.os.scope: system
        io.rancher.os.after: ntp
      net: host
      uts: host
      privileged: true
      volumes_from:
      - system-volumes
      volumes:
      - /usr/bin/ros:/usr/bin/ros
    command-volumes:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: echo
      labels:
        io.rancher.os.createonly: "true"
        io.rancher.os.scope: system
      log_driver: json-file
      net: none
      privileged: true
      read_only: true
      volumes:
      - /usr/bin/ros:/usr/bin/ros:ro
    console:
      image: {{.OS_REPO}}/os-console:{{.VERSION}}{{.SUFFIX}}
      command: ros console-init
      labels:
        io.rancher.os.scope: system
        io.rancher.os.after: cloud-init-execute
        io.docker.compose.rebuild: always
        io.rancher.os.console: default
      net: host
      uts: host
      pid: host
      ipc: host
      privileged: true
      restart: always
      volumes_from:
      - all-volumes
      volumes:
      - /usr/bin/iptables:/sbin/iptables:ro
    container-data-volumes:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: echo
      labels:
        io.rancher.os.createonly: "true"
        io.rancher.os.scope: system
      log_driver: json-file
      net: none
      privileged: true
      read_only: true
      volumes:
      - /var/lib/docker:/var/lib/docker
    media-volumes:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: echo
      labels:
        io.rancher.os.createonly: "true"
        io.rancher.os.scope: system
      log_driver: json-file
      net: none
      privileged: true
      read_only: true
      volumes:
      - /media:/media:shared
      - /mnt:/mnt:shared
    network:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: netconf
      labels:
        io.rancher.os.scope: system
        io.rancher.os.after: udev
        io.rancher.os.reloadconfig: "true"
      net: host
      uts: host
      pid: host
      privileged: true
      volumes_from:
      - command-volumes
      - system-volumes
    ntp:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: ntpd --nofork -g
      labels:
        io.rancher.os.scope: system
        io.rancher.os.after: network
      net: host
      uts: host
      privileged: true
      restart: always
      volumes_from:
      - command-volumes
      - system-volumes
    preload-user-images:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: ros preload-images
      labels:
        io.rancher.os.detach: "false"
        io.rancher.os.scope: system
        io.rancher.os.after: console
      privileged: true
      volumes_from:
      - command-volumes
      - system-volumes
    syslog:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: rsyslogd -n
      labels:
        io.rancher.os.scope: system
      log_driver: json-file
      net: host
      uts: host
      privileged: true
      restart: always
      volumes_from:
      - command-volumes
      - system-volumes
    system-volumes:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: echo
      labels:
        io.rancher.os.createonly: "true"
        io.rancher.os.scope: system
      log_driver: json-file
      net: none
      privileged: true
      read_only: true
      volumes:
      - /dev:/host/dev
      - /etc/docker:/etc/docker
      - /etc/hosts:/etc/hosts
      - /etc/resolv.conf:/etc/resolv.conf
      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt.rancher
      - /etc/selinux:/etc/selinux
      - /lib/firmware:/lib/firmware
      - /lib/modules:/lib/modules
      - /run:/run
      - /usr/share/ros:/usr/share/ros
      - /var/lib/rancher/cache:/var/lib/rancher/cache
      - /var/lib/rancher/conf:/var/lib/rancher/conf
      - /var/lib/rancher:/var/lib/rancher
      - /var/log:/var/log
      - /var/run:/var/run
    udev-cold:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: ros udev-settle
      labels:
        io.rancher.os.detach: "false"
        io.rancher.os.scope: system
      net: host
      uts: host
      privileged: true
      volumes_from:
      - command-volumes
      - system-volumes
    udev:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: udevd
      labels:
        io.rancher.os.detach: "true"
        io.rancher.os.scope: system
        io.rancher.os.after: udev-cold
      net: host
      uts: host
      privileged: true
      restart: always
      volumes_from:
      - command-volumes
      - system-volumes
    user-volumes:
      image: {{.OS_REPO}}/os-base:{{.VERSION}}{{.SUFFIX}}
      command: echo
      labels:
        io.rancher.os.createonly: "true"
        io.rancher.os.scope: system
      log_driver: json-file
      net: none
      privileged: true
      read_only: true
      volumes:
      - /home:/home
      - /opt:/opt
    docker:
      {{if eq "amd64" .ARCH -}}
      image: {{.OS_REPO}}/os-docker:1.12.6{{.SUFFIX}}
      {{else -}}
      image: {{.OS_REPO}}/os-docker:1.11.2{{.SUFFIX}}
      {{end -}}
      command: ros user-docker
      environment:
      - HTTP_PROXY
      - HTTPS_PROXY
      - NO_PROXY
      labels:
        io.rancher.os.scope: system
        io.rancher.os.after: console
      net: host
      pid: host
      ipc: host
      uts: host
      privileged: true
      restart: always
      volumes_from:
      - all-volumes
      volumes:
      - /sys:/host/sys
      - /var/lib/system-docker:/var/lib/system-docker:shared
  system_docker:
    registry_mirror: "http://10.10.10.23:5555"
    insecure_registry:
    - 10.10.10.23:5000
    - arian:5000
    exec: true
    storage_driver: overlay
    restart: false
    graph: /var/lib/system-docker
    group: root
    host: ["unix:///var/run/system-docker.sock"]
    pid_file: /var/run/system-docker.pid
    exec_root: /var/run/system-docker
    config_file: /etc/docker/system-docker.json
    userland_proxy: false
    log_opts:
      max-size: 25m
      max-file: 2
  upgrade:
    url: {{.OS_RELEASES_YML}}/releases{{.SUFFIX}}.yml
    image: {{.OS_REPO}}/os
  docker:
    registry_mirror: "http://10.10.10.23:5555"
    insecure_registry:
    - 10.10.10.23:5000
    - arian:5000
    {{if eq "amd64" .ARCH -}}
    engine: docker-1.12.6
    {{else -}}
    engine: docker-1.11.2
    {{end -}}
    storage_driver: overlay
    group: docker
    host: ["unix:///var/run/docker.sock"]
    log_opts:
      max-size: 25m
      max-file: 2
    tls_args: [--tlsverify, --tlscacert=/etc/docker/tls/ca.pem, --tlscert=/etc/docker/tls/server-cert.pem, --tlskey=/etc/docker/tls/server-key.pem,
      '-H=0.0.0.0:2376']
